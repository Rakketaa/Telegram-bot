import telebot
import datetime
from telebot import types
import os

bot = telebot.TeleBot(os.environ["API_KEY"])

questions = [
    {"question": "–°–∫–æ–ª—å–∫–æ –±—É–¥–µ—Ç 2+2?", "options": ["5", "6", "3", "4"], "correct_option": 3},
    {"question": "–ö–∞–∫ –Ω–∞–∑—ã–≤–∞—é—Ç –∂–∏–≤–æ—Ç–Ω–æ–µ, –∫–æ—Ç–æ—Ä–æ–µ –∏–º–µ–µ—Ç –ø–∞–Ω—Ü–∏—Ä—å?", "options": ["–°–ª–æ–Ω", "–ö—Ä–æ–∫–æ–¥–∏–ª", "–ñ–∏—Ä–∞—Ñ", "–ß–µ—Ä–µ–ø–∞—Ö–∞"], "correct_option": 3},
    {"question": "–°–∫–æ–ª—å–∫–æ —É–≥–ª–æ–≤ —É —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞?", "options": ["1", "2", "3", "4"], "correct_option": 2},
    {"question": '–ß—Ç–æ –¥–µ–ª–∞—é—Ç –∏–∑ –º–µ–¥–∏?', "options": ["–ü—Ä–æ–≤–æ–ª–æ–∫—É", "–î–æ–º–∞", "–í–µ–¥—Ä–∞", "–ú–µ–±–µ–ª—å"], "correct_option": 0},
    {"question": '–°–∫–æ–ª—å–∫–æ –±—É–¥–µ—Ç 6+6?', "options": ["10", "12", "14", "18"], "correct_option": 1},
    {"question": '–ß—Ç–æ –¥–µ–ª–∞—é—Ç –∏–∑ –º–æ–ª–æ–∫–∞?', "options": ["–î–µ—Ä–µ–≤—å—è", "–°—ã—Ä", "–ö–∏—Ä–ø–∏—á–∏", "–í–µ–¥—Ä–∞"], "correct_option": 1},
    {"question": '–ö—Ç–æ —Å—Ç—Ä–æ–∏—Ç –¥–æ–º–∞?', "options": ["–°—Ç—Ä–æ–∏—Ç–µ–ª–∏", "–ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç—ã", "–°—Ç—Ä–∏–º–µ—Ä—ã", "–ü–æ–ª–∏—Ü–µ–π—Å–∫–∏–µ"], "correct_option": 0},
    {"question": '–ß–µ–≥–æ –±–æ–ª—å—à–µ –Ω–∞ –Ω–∞—à–µ–π –ø–ª–∞–Ω–µ—Ç–µ (–≤ –ø–ª–∞–Ω–µ –º–∞—Å—Å—ã)?', "options": ["–í–æ–¥—ã", "–ó–µ–º–ª–∏", "–ü—É—Ö–∞", "–£–≥–ª—è"], "correct_option": 0},
    {"question": '–ö–∞–∫–æ–≤–∞ –ø–ª–æ—Ç–Ω–æ—Å—Ç—å –≤–æ–¥—ã?', "options": ["2 —á–µ–ª–æ–≤–µ–∫–∞", "5 –≥—Ä–∞–º–º", "–Ø –Ω–µ –∑–Ω–∞—é", "1000 –∫–≥/–º3"], "correct_option": 3},
    {"question": '–¢–µ–±–µ –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å —ç—Ç–∞ –≤–∏–∫—Ç–æ—Ä–∏–Ω–∞?', "options": ["–ù–µ—Ç", "–î–∞", "–Ø –Ω–µ –∑–Ω–∞—é", "–≥—ã–≥—ã–≥—ã–≥—ã–≥—ã–≥—ã"], "correct_option": 1},
]
correct_answers = 0
start_time = 0
current_question_message = None

@bot.message_handler(commands=['help'])
def Nachalo(message):
    bot.send_message(message.chat.id, '''–ü—Ä–∏–≤–µ—Ç, –≤–æ—Ç —Ç–µ–±–µ –º–æ–∏ –∫–æ–º–∞–Ω–¥—ã:
/help - –º–µ–Ω—é
/start - –ø—Ä–æ–π–¥–µ—à—å –≤–∏–∫—Ç–æ—Ä–∏–Ω—É
''')
    
@bot.message_handler(commands=['start', 'test'])
def start(message):
    global correct_answers
    global start_time
    global current_question_message
    correct_answers = 0
    start_time = datetime.datetime.now()
    current_question_message = bot.send_message(message.chat.id, text="–¢–µ—Å—Ç –Ω–∞—á–∞—Ç. –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –ø–µ—Ä–≤—ã–π –≤–æ–ø—Ä–æ—Å.")
    send_question(message.chat.id, 0)

def send_question(chat_id, question_index):
    question_data = questions[question_index]
    keyboard = types.InlineKeyboardMarkup()
    for option in question_data["options"]:
        keyboard.add(types.InlineKeyboardButton(text=option, callback_data=f'{question_index}_{question_data["options"].index(option)}'))
    global current_question_message
    bot.edit_message_text(chat_id=chat_id, message_id=current_question_message.message_id,
                          text=question_data["question"], reply_markup=keyboard)

@bot.callback_query_handler(func=lambda call: True)
def callback_worker(call):
    global correct_answers
    global current_question_message
    question_index, option_index = call.data.split('_')
    question_index = int(question_index)
    option_index = int(option_index)
    if option_index == questions[question_index]["correct_option"]:
        correct_answers += 1
    if question_index < len(questions) - 1:
        send_question(call.message.chat.id, question_index + 1)
    else:
        final_time = datetime.datetime.now() - start_time
        bot.send_message(call.message.chat.id, f"–£—Ä–∞! –í—ã –ø—Ä–æ—à–ª–∏ —Ç–µ—Å—Ç! üéâ\n\n‚û°Ô∏è –í–æ—Ç –≤–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {correct_answers}/{len(questions)}")
        with open("score.txt", "a") as file:
            score_list = f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {correct_answers}/{len(questions)}, id: {call.from_user.id}, –ò–º—è: {call.from_user.first_name}, –í—Ä–µ–º—è: {final_time}\n"
            file.write(score_list)

bot.polling(none_stop=True, interval=0)
